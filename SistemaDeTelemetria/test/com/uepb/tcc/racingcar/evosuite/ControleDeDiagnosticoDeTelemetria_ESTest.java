/*
 * This file was automatically generated by EvoSuite
 * Sun Mar 18 18:45:55 GMT 2018
 */

package com.uepb.tcc.racingcar.evosuite;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.uepb.tcc.racingcar.ControleDeDiagnosticoDeTelemetria;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.Random;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ControleDeDiagnosticoDeTelemetria_ESTest extends ControleDeDiagnosticoDeTelemetria_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ControleDeDiagnosticoDeTelemetria controleDeDiagnosticoDeTelemetria0 = new ControleDeDiagnosticoDeTelemetria();
      Random.setNextRandom(3829);
      try { 
        controleDeDiagnosticoDeTelemetria0.checkTransmissao();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Incapaz de conectar.
         //
         verifyException("com.uepb.tcc.racingcar.ControleDeDiagnosticoDeTelemetria", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ControleDeDiagnosticoDeTelemetria controleDeDiagnosticoDeTelemetria0 = new ControleDeDiagnosticoDeTelemetria();
      controleDeDiagnosticoDeTelemetria0.checkTransmissao();
      String string0 = controleDeDiagnosticoDeTelemetria0.getInfoDiagnostico();
      assertEquals("ULTIMA taxa TX.............. 100 MBPS\r\nMAIOR taxa TX............... 100 MBPS\r\nUTIMA taxa RX............... 100 MBPS\r\nMAIOR taxa RX............... 100 MBPS\r\nTAXA DE BIT................. 100000000\r\nPALAVRA LEN................. 16\r\nPALAVRA/ARMACAO............. 511\r\nBITS/ARMACAO................ 8192\r\nTIPO DE MODULACAO........... PCM/FM\r\nTX Digital Los.............. 0.75\r\nRX Digital Los.............. 0.10\r\nBEP Teste................... -5\r\nContagem Rtrn Local......... 00\r\nContagem Remota Rtrn ....... 00", string0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ControleDeDiagnosticoDeTelemetria controleDeDiagnosticoDeTelemetria0 = new ControleDeDiagnosticoDeTelemetria();
      String string0 = controleDeDiagnosticoDeTelemetria0.getInfoDiagnostico();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      ControleDeDiagnosticoDeTelemetria controleDeDiagnosticoDeTelemetria0 = new ControleDeDiagnosticoDeTelemetria();
      controleDeDiagnosticoDeTelemetria0.setInfoDiagnostico((String) null);
      String string0 = controleDeDiagnosticoDeTelemetria0.getInfoDiagnostico();
      assertNull(string0);
  }
}
