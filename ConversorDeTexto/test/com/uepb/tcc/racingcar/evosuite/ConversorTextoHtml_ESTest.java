/*
 * This file was automatically generated by EvoSuite
 * Sun Mar 18 18:04:18 GMT 2018
 */

package com.uepb.tcc.racingcar.evosuite;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.uepb.tcc.racingcar.ConversorTextoHtml;
import java.io.FileNotFoundException;
import java.io.IOException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ConversorTextoHtml_ESTest extends ConversorTextoHtml_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ConversorTextoHtml conversorTextoHtml0 = new ConversorTextoHtml("[}rw@Ux]%uiue$v665");
      String string0 = conversorTextoHtml0.getNomeArquivo();
      assertEquals("[}rw@Ux]%uiue$v665", string0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ConversorTextoHtml conversorTextoHtml0 = new ConversorTextoHtml("");
      String string0 = conversorTextoHtml0.getNomeArquivo();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/mnt/d/git/java/Racing-Car-Katas-TCC/ConversorDeTexto/MWEa&tk");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "");
      ConversorTextoHtml conversorTextoHtml0 = new ConversorTextoHtml("MWEa&tk");
      String string0 = conversorTextoHtml0.convertParaHtml();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      ConversorTextoHtml conversorTextoHtml0 = new ConversorTextoHtml((String) null);
      // Undeclared exception!
      try { 
        conversorTextoHtml0.convertParaHtml();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/mnt/d/git/java/Racing-Car-Katas-TCC/ConversorDeTexto/MWEa&tk");
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "");
      ConversorTextoHtml conversorTextoHtml0 = new ConversorTextoHtml("MWEa&tk");
      try { 
        conversorTextoHtml0.convertParaHtml();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Simulated IOException
         //
         verifyException("org.evosuite.runtime.vfs.VirtualFileSystem", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      ConversorTextoHtml conversorTextoHtml0 = new ConversorTextoHtml("{y,e");
      try { 
        conversorTextoHtml0.convertParaHtml();
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/mnt/d/git/java/Racing-Car-Katas-TCC/ConversorDeTexto/MWEa&tk");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "MWEa&tk");
      ConversorTextoHtml conversorTextoHtml0 = new ConversorTextoHtml("MWEa&tk");
      String string0 = conversorTextoHtml0.convertParaHtml();
      assertNotNull(string0);
      assertEquals("MWEa&amp;tk<br />", string0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      ConversorTextoHtml conversorTextoHtml0 = new ConversorTextoHtml((String) null);
      String string0 = conversorTextoHtml0.getNomeArquivo();
      assertNull(string0);
  }
}
